#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        BTConf {
            bindings = <&sl 6>;
            key-positions = <34 39 40>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <22 23>;
        };

        Redo {
            bindings = <&kp LC(O)>;
            key-positions = <23 24>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <40 21>;
        };

        Ctrl+c {
            bindings = <&kp LC(C)>;
            key-positions = <22 24>;
        };

        Ctrl+v {
            bindings = <&kp LC(V)>;
            key-positions = <22 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp L         &kp U        &kp COMMA                  &kp DOT                                                               &kp F        &kp W  &kp R  &kp Y  &kp P
&mt LEFT_SHIFT E  &kp I         &kp A        &kp O                      &kp MINUS      &kp LEFT_BRACKET               &kp RBKT                &kp K        &kp T  &kp N  &kp H  &mt RIGHT_SHIFT H
&mt LCTRL Z       &kp X         &kp C        &kp V                      &kp SEMICOLON  &kp SINGLE_QUOTE               &kp NUHS                &kp G        &kp M  &kp J  &kp B  &kp B
&kp LCTRL         &kp LEFT_WIN  &kp INT_YEN  &mt LEFT_ALT INT_MUHENKAN  &lt 4 SPACE    &lt_to_layer_0 5 INT_KANA      &mt LEFT_ALT BACKSPACE  &lt 3 ENTER                       &lt_to_layer_0 5 ESC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans   &trans                         &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6       &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans   &trans   &trans       &trans   &trans                          &to 0
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp SEMICOLON     &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp UNDERSCORE
&trans                      &none            &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&trans  &trans                  &kp UP_ARROW    &trans                   &trans                      &trans  &kp HOME        &kp UP_ARROW    &kp END          &kp PG_UP
&trans  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &trans  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_DN
&trans  &kp LG(LC(LEFT_ARROW))  &trans          &kp LG(LC(RIGHT_ARROW))  &trans  &trans      &trans  &trans  &trans          &trans          &trans           &trans
&trans  &none                   &trans          &trans                   &trans  &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans         &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB5  &mkp MB1       &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &kp LS(LG(D))  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                       &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4                               &kp KP_PLUS      &kp N7  &kp N8  &kp N9  &kp KP_MINUS
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans      &kp KP_NUMLOCK  &kp KP_ASTERISK  &kp N4  &kp N5  &kp N6  &kp KP_SLASH
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans      &kp BACKSLASH   &kp MINUS        &kp N1  &kp N2  &kp N3  &kp KP_DOT
&trans  &trans  &trans   &trans   &trans   &trans      &trans          &kp N0                                   &kp INT1
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &none         &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
